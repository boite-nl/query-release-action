name: Release
on:
  push:
    branches:
      - $default-branch
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      is-released: ${{ steps.check-version.outputs.found == 'false' }}
      is-prerelease: ${{ contains(steps.current-version.outputs.version, '-rc') }}
      release: ${{ steps.release.outputs.name }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get current release
        id: current-version
        run: |
          echo "::set-output name=version::$(npm pkg get version | xargs)"
      - run: npm install
      - run: npm run build
      - name: test
        run: npm run test:coverage
      - uses: ./
        name: Check if version "${{ steps.current-version.outputs.version }}" is released
        id: check-version
        with:
          exclude-draft: true
          prerelease: ${{ contains(steps.current-version.outputs.version, '-rc')}}
          release: ${{ !contains(steps.current-version.outputs.version, '-rc')}}
          select: ${{ steps.current-version.outputs.version }}
      - uses: release-drafter/release-drafter@v5.23.0
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: ${{ steps.check-version.outputs.found == 'false' }}
          prerelease: ${{ contains(steps.current-version.outputs.version, '-rc') }}
          version: ${{ (steps.check-version.outputs.found == 'false' && steps.current-version.outputs.version) || ''}}
          tag: v${{ steps.current-version.outputs.version }}
  tagging:
    runs-on: ubuntu-latest
    needs: [release]
    if: needs.release.outputs.is-released && !needs.release.outputs.is-prerelease
    steps:
      - uses: actions/checkout@v3
      - uses: vweevers/additional-tags-action@v1

